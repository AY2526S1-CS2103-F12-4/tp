@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "e:EditCommand" as EditCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
participant ":Person" as Person MODEL_COLOR
end box

[-> LogicManager : execute("edit -c 1 n/John Doe p/91234567")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("edit -c 1 n/John Doe p/91234567")
activate AddressBookParser

create EditCommandParser
AddressBookParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> AddressBookParser
deactivate EditCommandParser

AddressBookParser -> EditCommandParser : parse("-c 1 n/John Doe p/91234567")
activate EditCommandParser

create EditCommand
EditCommandParser -> EditCommand
activate EditCommand

EditCommand --> EditCommandParser
deactivate EditCommand

EditCommandParser --> AddressBookParser : e
deactivate EditCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditCommandParser -[hidden]-> AddressBookParser
destroy EditCommandParser

AddressBookParser --> LogicManager : e
deactivate AddressBookParser

LogicManager -> EditCommand : execute(m)
activate EditCommand

EditCommand -> Model : getFilteredPersonList()
activate Model

Model --> EditCommand : personList
deactivate Model

EditCommand -> EditCommand : createEditedPerson(personToEdit, editPersonDescriptor)
activate EditCommand

EditCommand --> EditCommand : editedPerson
deactivate EditCommand

EditCommand -> Model : hasPerson(editedPerson)
activate Model

Model --> EditCommand : false
deactivate Model

EditCommand -> Model : setPerson(personToEdit, editedPerson)
activate Model

create Person
Model -> Person : new Person(...)
activate Person

Person --> Model
deactivate Person

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand
deactivate CommandResult

EditCommand --> LogicManager : r
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
